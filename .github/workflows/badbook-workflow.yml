name: Convert Optimus2502.bin to PGN

on:
  workflow_dispatch:            # manual run button
  push:                          # or auto-run when the book changes
    paths:
      - Optimus2502.bin

jobs:
  convert:
    runs-on: ubuntu-latest

    steps:
    # 1 ▸ get the .bin file from your repo
    - uses: actions/checkout@v4

    # 2 ▸ lightweight Python environment
    - uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    # 3 ▸ pure-Python dependency (installs in a few seconds)
    - name: Install python-chess
      run: pip install --quiet 'chess>=1.10.0'

    # 4 ▸ dump **all** lines – iterative stack, no recursion limit
    - name: Convert .bin → .pgn
      run: |
        python - <<'PY'
        import chess, chess.polyglot, chess.pgn, pathlib, sys

        BIN = pathlib.Path("Optimus2502.bin")
        PGN = pathlib.Path("Optimus2502.pgn")

        if not BIN.is_file():
            sys.exit(f"❌ {BIN} not found in repo root.")

        # --- iterative depth-first traversal ---------------------------------
        with chess.polyglot.open_reader(str(BIN)) as reader, PGN.open("w", encoding="utf-8") as out:
            root = chess.Board()
            stack = [(root, [])]                 # (board, move_list)

            while stack:
                board, line = stack.pop()

                entries = list(reader.find_all(board))
                if not entries:                  # reached a leaf → emit a PGN game
                    game = chess.pgn.Game()
                    node = game
                    for mv in line:
                        node = node.add_variation(mv)
                    print(game, file=out, end="\n\n")
                    continue

                # push children onto the stack (reverse keeps original order)
                for entry in entries[::-1]:
                    mv = entry.move
                    board.push(mv)
                    stack.append((board.copy(stack=False), line + [mv]))
                    board.pop()

        print(f"✅ Wrote complete PGN to {PGN}")
        PY

    # 5 ▸ upload result using the current v4 artifact action
    - uses: actions/upload-artifact@v4
      with:
        name: Optimus2502.pgn
        path: Optimus2502.pgn
